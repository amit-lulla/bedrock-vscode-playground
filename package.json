{
  "name": "bedrock-vscode-playground",
  "displayName": "Bedrock Visual Studio Code Playground",
  "description": "Explore and experiment with large language models (LLMs) available in Amazon Bedrock",
  "version": "0.1.1",
  "publisher": "AmazonWebServices-AISolutionsArchitecture",
  "engines": {
    "vscode": "^1.82.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/awslabs/bedrock-vscode-playground"
  },
  "icon": "media/bedrock-vscode-playground.png",
  "keywords": [
    "llm",
    "bedrock",
    "code",
    "ai",
    "code-referencing",
    "documentation",
    "refactor",
    "typescript"
  ],
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Education"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "configuration": {
    "title": "GitMagic"
  },
  "contributes": {
    "configuration": {
      "title": "Bedrock Playground",
      "properties": {
        "bedrockPlayground.profileName": {
          "type": "string",
          "default": "default",
          "markdownDescription": "AWS profile used to invoke the Amazon Bedrock service. If profile name is not provided or invalid, then the `default` profile is used."
        },
        "bedrockPlayground.generate.modelId": {
          "type": "string",
          "default": "anthropic.claude-instant-v1",
          "enum": [
            "anthropic.claude-v2",
            "anthropic.claude-v1",
            "anthropic.claude-instant-v1",
            "cohere.command-text-v14",
            "cohere.command-light-text-v14",
            "ai21.j2-ultra-v1",
            "ai21.j2-mid-v1",
            "amazon.titan-text-express-v1",
            "amazon.titan-text-lite-v1",
            "meta.llama2-13b-chat-v1"
          ],
          "markdownDescription": "The default model for to use for `Bedrock Playground: Generate` command."
        },
        "bedrockPlayground.generate.promptTemplate": {
          "type": "array",
          "default": [
            "\n\nHuman: {REQUEST}\nPlease placed your response in <response></response> XML tags.\n\nAssistant:"
          ],
          "markdownDescription": "The prompt template when invoking `Bedrock Playground: Generate` **without** context (e.g. highlighted code). Make sure the template contains a `{REQUEST}` placeholder. This placeholder will be substituted with the user's request."
        },
        "bedrockPlayground.generate.contextualPromptTemplate": {
          "type": "array",
          "default": [
            "\n\nHuman: Use the context wrapped in <context></context> tags to respond to a user's request.\nThe user's request will be wrapped in <request></request> tags.\n<context>{CONTEXT}</context>\n<request>{REQUEST}</request>\nPlease place your response in <response></response> tags.\n\nAssistant:"
          ],
          "markdownDescription": "The prompt template when invoking `Bedrock Playground: Generate` **with** context (e.g. highlighted code). Make sure the template contains a `{REQUEST}` and `{CONTEXT}` placeholder. The `{REQUEST}` placeholder will be substituted with the user's request while the `{CONTEXT}` placeholder will be substituted with context from a file."
        },
        "bedrockPlayground.anthropicClaude.maxTokensToSample": {
          "type": "number",
          "default": 300,
          "description": "Specify the maximum number of tokens to use in the generated response. We recommend a limit of 4,000 tokens for optimal performance."
        },
        "bedrockPlayground.anthropicClaude.temperature": {
          "type": "number",
          "default": 0.5,
          "description": "Use a lower value to decrease randomness in the response."
        },
        "bedrockPlayground.anthropicClaude.topK": {
          "type": "number",
          "default": 250,
          "description": "Specify the number of token choices the model uses to generate the next token."
        },
        "bedrockPlayground.anthropicClaude.topP": {
          "type": "number",
          "default": 1,
          "description": "Use a lower value to ignore less probable options."
        },
        "bedrockPlayground.anthropicClaude.stopSequences": {
          "type": "array",
          "default": [
            "\n\nHuman:"
          ],
          "description": "Configure up to four sequences that the model recognizes. After a stop sequence, the model stops generating further tokens. The returned text doesn't contain the stop sequence."
        },
        "bedrockPlayground.AI21 Jurassic-2.maxTokens": {
          "type": "number",
          "default": 300,
          "description": "Specify the maximum number of tokens to use in the generated response."
        },
        "bedrockPlayground.AI21 Jurassic-2.temperature": {
          "type": "number",
          "default": 0.5,
          "description": "Use a lower value to decrease randomness in the response."
        },
        "bedrockPlayground.AI21 Jurassic-2.topP": {
          "type": "number",
          "default": 1,
          "description": "Use a lower value to ignore less probable options."
        },
        "bedrockPlayground.AI21 Jurassic-2.stopSequences": {
          "type": "array",
          "default": [],
          "description": "Configure stop sequences that the model recognizes and after which it stops generating further tokens. Press the Enter key to insert a newline character in a stop sequence. Use the Tab key to finish inserting a stop sequence."
        },
        "bedrockPlayground.AI21 Jurassic-2.countPenalty.scale": {
          "type": "number",
          "default": 0,
          "description": "Use a higher value to lower the probability of generating new tokens that already appear at least once in the prompt or in the completion. Proportional to the number of appearances."
        },
        "bedrockPlayground.AI21 Jurassic-2.countPenalty.applyToWhitespaces": {
          "type": "boolean",
          "default": false,
          "description": "Penalize whitespaces."
        },
        "bedrockPlayground.AI21 Jurassic-2.countPenalty.applyToPunctuations": {
          "type": "boolean",
          "default": false,
          "description": "Penalize punctuations."
        },
        "bedrockPlayground.AI21 Jurassic-2.countPenalty.applyToNumbers": {
          "type": "boolean",
          "default": false,
          "description": "Penalize numbers."
        },
        "bedrockPlayground.AI21 Jurassic-2.countPenalty.applyToStopwords": {
          "type": "boolean",
          "default": false,
          "description": "Penalize stop words."
        },
        "bedrockPlayground.AI21 Jurassic-2.countPenalty.applyToEmojis": {
          "type": "boolean",
          "default": false,
          "description": "Penalize emojis."
        },
        "bedrockPlayground.AI21 Jurassic-2.presencePenalty.scale": {
          "type": "number",
          "default": 0,
          "description": "Use a higher value to lower the probability of generating new tokens that already appear at least once in the prompt or in the completion."
        },
        "bedrockPlayground.AI21 Jurassic-2.presencePenalty.applyToWhitespaces": {
          "type": "boolean",
          "default": false,
          "description": "Penalize whitespaces."
        },
        "bedrockPlayground.AI21 Jurassic-2.presencePenalty.applyToPunctuations": {
          "type": "boolean",
          "default": false,
          "description": "Penalize punctuations."
        },
        "bedrockPlayground.AI21 Jurassic-2.presencePenalty.applyToNumbers": {
          "type": "boolean",
          "default": false,
          "description": "Penalize numbers."
        },
        "bedrockPlayground.AI21 Jurassic-2.presencePenalty.applyToStopwords": {
          "type": "boolean",
          "default": false,
          "description": "Penalize stop words."
        },
        "bedrockPlayground.AI21 Jurassic-2.presencePenalty.applyToEmojis": {
          "type": "boolean",
          "default": false,
          "description": "Penalize emojis."
        },
        "bedrockPlayground.AI21 Jurassic-2.frequencyPenalty.scale": {
          "type": "number",
          "default": 0,
          "description": "Use a high value to lower the probability of generating new tokens that already appear at least once in the prompt or in the completion. The value is proportional to the frequency of the token appearances (normalized to text length)."
        },
        "bedrockPlayground.AI21 Jurassic-2.frequencyPenalty.applyToWhitespaces": {
          "type": "boolean",
          "default": false,
          "description": "Penalize whitespaces."
        },
        "bedrockPlayground.AI21 Jurassic-2.frequencyPenalty.applyToPunctuations": {
          "type": "boolean",
          "default": false,
          "description": "Penalize punctuations."
        },
        "bedrockPlayground.AI21 Jurassic-2.frequencyPenalty.applyToNumbers": {
          "type": "boolean",
          "default": false,
          "description": "Penalize numbers."
        },
        "bedrockPlayground.AI21 Jurassic-2.frequencyPenalty.applyToStopwords": {
          "type": "boolean",
          "default": false,
          "description": "Penalize stop words."
        },
        "bedrockPlayground.AI21 Jurassic-2.frequencyPenalty.applyToEmojis": {
          "type": "boolean",
          "default": false,
          "description": "Penalize emojis."
        },
        "bedrockPlayground.amazonTitan.temperature": {
          "type": "number",
          "default": 0,
          "description": "Use a lower value to decrease randomness in the response."
        },
        "bedrockPlayground.amazonTitan.topP": {
          "type": "number",
          "default": 1,
          "description": "Use a lower value to ignore less probable options."
        },
        "bedrockPlayground.amazonTitan.maxTokenCount": {
          "type": "number",
          "default": 512,
          "description": "Specify the maximum number of tokens in the generated response."
        },
        "bedrockPlayground.amazonTitan.stopSequences": {
          "type": "array",
          "default": [],
          "markdownDescription": "Specify character sequences to indicate where the model should stop. Use the | (pipe) character to separate different sequences (maximum 20 characters)."
        },
        "bedrockPlayground.cohereCommand.temperature": {
          "type": "number",
          "default": 0.9,
          "description": "Use a lower value to decrease randomness in the response."
        },
        "bedrockPlayground.cohereCommand.topP": {
          "type": "number",
          "default": 0.75,
          "description": "Use a lower value to ignore less probable options. Set to 0 or 1.0 to disable. If both Top P and Top K are enabled, Top P acts after Top K."
        },
        "bedrockPlayground.cohereCommand.topK": {
          "type": "number",
          "default": 0,
          "description": "Specify the number of token choices the model uses to generate the next token. If both Top P and Top K are enabled, Top P acts after Top K."
        },
        "bedrockPlayground.cohereCommand.maxTokens": {
          "type": "number",
          "default": 20,
          "description": "Specify the maximum number of tokens to use in the generated response."
        },
        "bedrockPlayground.cohereCommand.stopSequences": {
          "type": "array",
          "default": [],
          "description": "Configure up to four sequences that the model recognizes. After a stop sequence, the model stops generating further tokens. The returned text doesn't contain the stop sequence."
        },
        "bedrockPlayground.cohereCommand.returnLikelihoods": {
          "type": "string",
          "default": "NONE",
          "markdownDescription": "Specify how and if the token likelihoods are returned with the response. You can specify the following options:\n- `GENERATION` - Only return likelihoods for generated tokens.\n- `ALL` - Return likelihoods for all tokens.\n- `NONE` - Don't return any likelihoods."
        },
        "bedrockPlayground.cohereCommand.truncate": {
          "type": "string",
          "default": "END",
          "markdownDescription": "Specifies how the API handles inputs longer than the maximum token length. Use one of the following:\n- `NONE` - Returns an error when the input exceeds the maximum input token length.\n- `START` - Discard the start of the input\n- `END` - Discards the end of the input."
        },
        "bedrockPlayground.llama2.temperature": {
          "type": "number",
          "default": 0.5,
          "markdownDescription": "Use a lower value to decrease randomness in the response."
        },
        "bedrockPlayground.llama2.topP": {
          "type": "number",
          "default": 0.5,
          "markdownDescription": " Use a lower value to ignore less probable options. Set to 0 or 1.0 to disable."
        },
        "bedrockPlayground.llama2.maximumLength": {
          "type": "number",
          "default": 512,
          "markdownDescription": "Specify the maximum number of tokens to use in the generated response. The model truncates the response once the generated text exceeds this value."
        }
      }
    },
    "commands": [
      {
        "command": "bedrock.playground",
        "title": "Bedrock Playground: Open Playground"
      },
      {
        "command": "bedrock.generate",
        "title": "Bedrock Playground: Generate"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "lint": "eslint src --ext ts",
    "unit-tests": "npm run compile-tests && vscode-test --label unitTests"
  },
  "devDependencies": {
    "@aws-sdk/types": "^3.451.0",
    "@types/chai": "^4.3.9",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/sinon": "^10.0.20",
    "@types/sinon-chai": "^3.2.11",
    "@types/vscode": "^1.82.0",
    "@types/vscode-webview": "^1.57.0",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "@vscode/test-cli": "^0.0.3",
    "@vscode/test-electron": "^2.3.5",
    "aws-sdk-client-mock": "^3.0.0",
    "chai": "^4.3.10",
    "eslint": "^8.47.0",
    "glob": "^10.3.3",
    "mocha": "^10.2.0",
    "prettier": "^2.8.1",
    "sinon": "^16.1.3",
    "sinon-chai": "^3.7.0",
    "ts-loader": "^9.4.4",
    "typescript": "^5.1.6",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@aws-sdk/client-bedrock": "^3.509.0",
    "@aws-sdk/client-bedrock-runtime": "^3.509.0",
    "@aws-sdk/credential-provider-node": "^3.509.0",
    "@aws-sdk/types": "^3.509.0",
    "@smithy/util-stream": "^2.0.20",
    "@vscode/webview-ui-toolkit": "^1.2.2"
  }
}
